name: auto-release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      cpp: ${{ steps.filter.outputs.cpp }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: detect changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            cpp:
              - '**/*.cpp'

  build-and-release:
    needs: changes
    if: ${{ needs.changes.outputs.cpp == 'true' || github.ref_type == 'tag' || github.event_name == 'workflow_dispatch' }}
    runs-on: windows-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: add bundled mingw to path
        shell: cmd
        run: echo resources\mingw64\bin>> %GITHUB_PATH%

      - name: verify toolchain
        shell: cmd
        run: |
          g++ --version
          windres --version

      - name: build exe
        shell: cmd
        run: builder.bat

      - name: compute version and filename
        shell: pwsh
        run: |
          $refType = "${{ github.ref_type }}"
          if ($refType -eq "tag") {
            $version = "${{ github.ref_name }}"
            $prerelease = "false"
          }
          else {
            $version = "nightly-${{ github.run_number }}"
            $prerelease = "false"
          }
          $file = "Xylera Valex auto cracker $version.exe"
          $releaseName = "Xylera Valex auto cracker $version"
          echo "VERSION=$version" >> $env:GITHUB_ENV
          echo "FILE_NAME=$file" >> $env:GITHUB_ENV
          echo "RELEASE_NAME=$releaseName" >> $env:GITHUB_ENV
          echo "TAG=$version" >> $env:GITHUB_ENV
          echo "PRERELEASE=$prerelease" >> $env:GITHUB_ENV

      - name: rename exe with version
        shell: pwsh
        run: |
          Rename-Item -Path "xylera.exe" -NewName "$env:FILE_NAME"
          echo "built $env:FILE_NAME"

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: xylera-exe
          path: "${{ env.FILE_NAME }}"

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.RELEASE_NAME }}
          prerelease: ${{ env.PRERELEASE }}
          draft: false
          files: |
            ${{ env.FILE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
